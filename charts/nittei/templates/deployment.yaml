# Merge the `defaultEnv` and `env` together to create a new map of environment variables
# This map is used to populate the `env` field
{{- $defaultEnv := .Values.defaultEnv | default list }}
{{- $extraEnv := .Values.env | default list }}

{{- $envMap := dict }}

{{- range $defaultEnv }}
  {{- $envMap = merge $envMap (dict .name .) }}
{{- end }}

{{- range $extraEnv }}
  {{- $envMap = merge $envMap (dict .name .) }}
{{- end }}
# End of the environment variable merge

# Set default SERVICE_VERSION env var
{{- $defaultServiceVersion := .Values.image.tag }}
{{- if not (hasKey $envMap "SERVICE_VERSION") }}
  {{- $envMap = merge $envMap (dict "SERVICE_VERSION" (dict "name" "SERVICE_VERSION" "value" $defaultServiceVersion)) }}
{{- end }}
# End of setting default SERVICE_VERSION env var

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nittei.fullname" . }}
  labels:
    {{- include "nittei.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "nittei.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nittei.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nittei.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- range $key, $value := $envMap }}
            - name: {{ $key }}
              value: {{ $value.value }}
            {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
